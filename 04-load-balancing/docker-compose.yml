version: '3.8'

services:
  kong:
    image: kong:3.4
    container_name: kong-lb
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    volumes:
      - ./kong.yml:/kong/kong.yml:ro
    ports:
      - "8000:8000"   # Proxy port
      - "8001:8001"   # Admin API port
      - "8443:8443"   # Proxy SSL port
      - "8444:8444"   # Admin API SSL port
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - kong-net
    depends_on:
      - go-mock-api-1
      - node-mock-api-2

  # Go Mock API 1 (Performance Leader)
  go-mock-api-1:
    build: ./go-mock-server
    container_name: go-mock-api-1
    environment:
      - PORT=3001
      - SERVER_NAME=go-mock-api-1
    ports:
      - "3001:3001"
    networks:
      - kong-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node.js Mock API 2 (Ecosystem Rich)  
  node-mock-api-2:
    build: ./node-mock-server
    container_name: node-mock-api-2
    environment:
      - PORT=3002
      - SERVER_NAME=node-mock-api-2
    ports:
      - "3002:3002"
    networks:
      - kong-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  kong-net:
    driver: bridge
