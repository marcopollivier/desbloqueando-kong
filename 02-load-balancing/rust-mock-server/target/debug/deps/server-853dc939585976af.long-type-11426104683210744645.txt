impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Clone
warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<AppState>,), Error = Infallible> + Clone>, fn(Arc<AppState>) -> impl Future<Output = Result<impl Reply, Rejection>> {health_handler}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<AppState>,), Error = Infallible> + Clone>, fn(Arc<AppState>) -> impl Future<Output = Result<impl Reply, Rejection>> {get_posts_handler}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (u32,), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<AppState>,), Error = Infallible> + Clone>, fn(u32, Arc<AppState>) -> impl Future<Output = Result<impl Reply, Rejection>> {get_post_handler}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<AppState>,), Error = Infallible> + Clone>, fn(Arc<AppState>) -> impl Future<Output = Result<impl Reply, Rejection>> {get_users_handler}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (u32,), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<AppState>,), Error = Infallible> + Clone>, fn(u32, Arc<AppState>) -> impl Future<Output = Result<impl Reply, Rejection>> {get_user_handler}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<AppState>,), Error = Infallible> + Clone>, fn(Arc<AppState>) -> impl Future<Output = Result<impl Reply, Rejection>> {performance_handler}>>
impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Clone: warp::filter::wrap::WrapSealed<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::or::Or<warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<AppState>,), Error = Infallible> + Clone>, fn(Arc<AppState>) -> impl Future<Output = Result<impl Reply, Rejection>> {health_handler}>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<AppState>,), Error = Infallible> + Clone>, fn(Arc<AppState>) -> impl Future<Output = Result<impl Reply, Rejection>> {get_posts_handler}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (u32,), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<AppState>,), Error = Infallible> + Clone>, fn(u32, Arc<AppState>) -> impl Future<Output = Result<impl Reply, Rejection>> {get_post_handler}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<AppState>,), Error = Infallible> + Clone>, fn(Arc<AppState>) -> impl Future<Output = Result<impl Reply, Rejection>> {get_users_handler}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (u32,), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<AppState>,), Error = Infallible> + Clone>, fn(u32, Arc<AppState>) -> impl Future<Output = Result<impl Reply, Rejection>> {get_user_handler}>>, warp::filter::and_then::AndThen<warp::filter::and::And<warp::filter::and::And<Exact<warp::path::internal::Opaque<&str>>, impl warp::Filter + warp::filter::FilterBase<Extract = (), Error = Rejection> + Copy>, impl warp::Filter + warp::filter::FilterBase<Extract = (Arc<AppState>,), Error = Infallible> + Clone>, fn(Arc<AppState>) -> impl Future<Output = Result<impl Reply, Rejection>> {performance_handler}>>>
