version: '3.8'

services:
  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    container_name: kong-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - kong-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # PostgreSQL for Kong (opcional, usando modo DB-less)
  postgres:
    image: postgres:14-alpine
    container_name: kong-postgres
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_DB: kong
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - kong-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go Validation Service
  go-validator:
    build:
      context: ./go-plugin
      dockerfile: Dockerfile
    container_name: go-validator-service
    environment:
      PORT: "8002"
      REDIS_HOST: "redis"
      REDIS_PORT: "6379"
      LOG_LEVEL: "info"
    ports:
      - "8002:8002"
    networks:
      - kong-net
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8002/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Kong Gateway
  kong:
    image: kong:latest
    container_name: kong-gateway
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_LOG_LEVEL: info
      KONG_PLUGINS: bundled,go-validator-bridge
      LUA_PATH: "/usr/local/share/lua/5.1/?.lua;;"
    volumes:
      - ./kong.yml:/kong/kong.yml:ro
      - ./kong/plugins:/usr/local/share/lua/5.1/kong/plugins
    ports:
      - "8000:8000"  # Proxy
      - "8001:8001"  # Admin API
    networks:
      - kong-net
    depends_on:
      go-validator:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 3

  # Test service (httpbin for testing)
  httpbin:
    image: kennethreitz/httpbin:latest
    container_name: test-httpbin
    ports:
      - "8080:80"
    networks:
      - kong-net

volumes:
  postgres_data:
  redis_data:

networks:
  kong-net:
    driver: bridge
