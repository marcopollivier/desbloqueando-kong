## Mock Services - Centralized mock APIs for Kong examples

.DEFAULT_GOAL := help

# Network name for external communication
NETWORK_NAME := mock-services-net

## Setup and Management
setup: network build ## Configura network e build dos servi√ßos
	@echo "‚úÖ Mock services configurados"

network: ## Cria network externa para comunica√ß√£o
	@docker network create $(NETWORK_NAME) 2>/dev/null || true
	@echo "‚úÖ Network $(NETWORK_NAME) criada/verificada"

build: ## Build das imagens dos mock services
	@docker compose build --no-cache
	@echo "‚úÖ Imagens constru√≠das"

up: network ## Sobe os mock services
	@docker compose up -d
	@echo "‚úÖ Mock services iniciados"
	@echo "üåê Go Mock API: http://localhost:3001"
	@echo "üåê Node Mock API: http://localhost:3002"

down: ## Para os mock services
	@docker compose down
	@echo "‚úÖ Mock services parados"

clean: down ## Remove containers, images e network
	@docker compose down --rmi all --volumes --remove-orphans
	@docker network rm $(NETWORK_NAME) 2>/dev/null || true
	@echo "‚úÖ Limpeza conclu√≠da"

## Monitoring
logs: ## Mostra logs dos servi√ßos
	@docker compose logs -f

status: ## Status dos servi√ßos
	@docker compose ps

health: ## Health check dos servi√ßos
	@echo "üîç Verificando sa√∫de dos servi√ßos..."
	@curl -s http://localhost:3001/health | jq . || echo "‚ùå Go service n√£o responde"
	@curl -s http://localhost:3002/health | jq . || echo "‚ùå Node service n√£o responde"

## Testing
test: ## Testa endpoints b√°sicos
	@echo "üß™ Testando Go Mock API..."
	@curl -s http://localhost:3001/users | jq .
	@echo "\nüß™ Testando Node Mock API..."
	@curl -s http://localhost:3002/users | jq .

help: ## Mostra esta ajuda
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | \
		awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-15s\033[0m %s\n", $$1, $$2}'

.PHONY: setup network build up down clean logs status health test help